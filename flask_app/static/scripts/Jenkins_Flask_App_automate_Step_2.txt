#!/bin/bash
python -m venv .venv
# Activating virtual environment
source .venv/bin/activate
# installing dependencies
pip install -r requirements.txt
lsof -ti:8000 | xargs kill -9
gunicorn -b 0.0.0.0:8000 main:app &
sleep 7
lsof -ti:8000 | xargs kill -9

# Define the content of the service file
SERVICE_FILE_CONTENT="[Unit]
Description=Gunicorn instance to serve Flask application
After=network.target

[Service]
User=ec2-user
Group=ec2-user
WorkingDirectory=/var/lib/jenkins/workspace/demo
ExecStart=/var/lib/jenkins/workspace/demo/.venv/bin/gunicorn -w 4 -b 0.0.0.0:8000 main:app

[Install]
WantedBy=multi-user.target"

# Echo the content into the service file
echo "$SERVICE_FILE_CONTENT" | sudo tee /etc/systemd/system/flask_trading.service > /dev/null
# Reload systemd to apply changes
sudo systemctl daemon-reload
sudo systemctl start flask_trading
sudo systemctl enable flask_trading
sudo systemctl status flask_trading


# Define the content for the NGINX configuration file
NGINX_CONFIG_CONTENT=$(cat << 'EOF'
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    server {
    listen 80;
    server_name 18.207.225.156;
        location / {
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate /etc/pki/nginx/server.crt;
#        ssl_certificate_key /etc/pki/nginx/private/server.key;
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }

}
EOF
)

sudo yum install -y nginx
sudo systemctl start nginx
sudo systemctl enable nginx

# Clear the NGINX configuration file
echo "$NGINX_CONFIG_CONTENT" | sudo tee /etc/nginx/nginx.conf > /dev/null

sudo systemctl restart nginx